(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{409:function(v,_,l){"use strict";l.r(_);var t=l(7),i=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("算法难度标准：数据依赖、数据并行")]),v._v(" "),_("p",[v._v("性能优化：")]),v._v(" "),_("ul",[_("li",[v._v("减少控制分支")]),v._v(" "),_("li",[v._v("并行规约：将数据划分成更小的块分别计算，再汇总到一起")]),v._v(" "),_("li",[v._v("矩阵转置：为了更好的作规约")])]),v._v(" "),_("p",[v._v("k-means的优化点")]),v._v(" "),_("ul",[_("li",[v._v("数据转为一维矩阵再拷贝到GPU")]),v._v(" "),_("li",[v._v("转置")]),v._v(" "),_("li",[v._v("计算每个元素到点中心的距离，无依赖关系因此采用并行计算")]),v._v(" "),_("li",[v._v("使用共享内存")]),v._v(" "),_("li",[v._v("使用线程数量的变量存储当前迭代轮聚类中心变化的次数，计算完成后累加求和得到总值，小于一个阔值则停止迭代")])])])}),[],!1,null,null,null);_.default=i.exports}}]);