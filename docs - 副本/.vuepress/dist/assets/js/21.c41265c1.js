(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{387:function(v,t,_){"use strict";_.r(t);var e=_(7),a=Object(e.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[t("code",[v._v('<script src="myScript.js"><\/script>')]),v._v("外部导入js文件，"),t("code",[v._v("<script>")]),v._v("标签在body和head里都可以")]),v._v(" "),t("h1",{attrs:{id:"基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[v._v("#")]),v._v(" 基础")]),v._v(" "),t("h2",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[v._v("#")]),v._v(" 语法")]),v._v(" "),t("p",[v._v("注释语法：同cpp")]),v._v(" "),t("p",[v._v("debugger关键字表示设置了断点")]),v._v(" "),t("h3",{attrs:{id:"换行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#换行"}},[v._v("#")]),v._v(" 换行")]),v._v(" "),t("p",[v._v("对于没有用;换行的语句JavaScript会自动加上；实现换行。但要注意如果这一行语义本身是完整的，那么就不会和下一行关联起来")]),v._v(" "),t("p",[v._v("在每个函数类，统一的一个作用域")]),v._v(" "),t("h3",{attrs:{id:"输出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出"}},[v._v("#")]),v._v(" 输出")]),v._v(" "),t("p",[t("code",[v._v("window.alert()")]),v._v("; 弹出警告")]),v._v(" "),t("p",[t("code",[v._v("document.write()")]),v._v("；写入html标签")]),v._v(" "),t("p",[t("code",[v._v('document.getElementById("demo").innerHTML = "段落已修改。";')]),v._v("操作html元素")]),v._v(" "),t("p",[t("code",[v._v("console.log()")]),v._v("输出到控制台")]),v._v(" "),t("h3",{attrs:{id:"数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[v._v("#")]),v._v(" 数据结构")]),v._v(" "),t("p",[v._v("变量：var x,len  未赋值的变量为"),t("code",[v._v("undefined")])]),v._v(" "),t("p",[v._v("判断一个变量是否生效：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("字面量：3.14 1001 123e5")])]),v._v(" "),t("li",[t("p",[v._v('字符串："jp" ‘kf’ 字符串内嵌套引号需要加转移符'),t("code",[v._v("\\")]),v._v('\nvar str1=“string”;//string类型\nvar str2 = new string("str");//object类型')])]),v._v(" "),t("li",[t("p",[v._v("空：NULL")])]),v._v(" "),t("li",[t("p",[v._v("布尔")])]),v._v(" "),t("li",[t("p",[v._v("未定义")])]),v._v(" "),t("li",[t("p",[v._v("symbol")])]),v._v(" "),t("li",[t("p",[v._v("数组（object）：\nvar cars= [12,223,4,4]\nvar cars= new Array(1,2,3);\n//不要使用 var car=[12,]这样的语法")])]),v._v(" "),t("li",[t("p",[v._v('对象（object）：\nvar obj = {num:123,str:"fds",fun:function(){}};\nobj.num;\nobj["str"];\nobj.fun();')])]),v._v(" "),t("li",[t("p",[v._v("函数（function）")])]),v._v(" "),t("li",[t("p",[v._v("正则，regexp对象")])]),v._v(" "),t("li",[t("p",[v._v("日期")])])]),v._v(" "),t("p",[v._v("JavaScript中所有数据都是以64位浮点数存放，因此有精度问题")]),v._v(" "),t("p",[v._v("null 和 undefined 的值相等，但类型不等")]),v._v(" "),t("p",[v._v("显式的声明变量类型：")]),v._v(" "),t("p",[t("strong",[v._v("变量提升")]),v._v(":在JavaScript中无论变量在哪里声明，最后都会被解释器提升到方法的最顶部。初始化不会提升")]),v._v(" "),t("p",[v._v("注：有名函数也是一种变量，也满足函数提升，先使用后定义")]),v._v(" "),t("h3",{attrs:{id:"数字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数字"}},[v._v("#")]),v._v(" 数字")]),v._v(" "),t("p",[v._v("8进制："),t("code",[v._v("var y = 0377;")])]),v._v(" "),t("p",[v._v("16进制："),t("code",[v._v("var y = 0xFFF;")])]),v._v(" "),t("p",[t("code",[v._v("myNumber.toString(16);")]),v._v(" //转换为16进制")]),v._v(" "),t("p",[t("code",[v._v("Infinity")]),v._v("表示无穷大")]),v._v(" "),t("p",[t("code",[v._v("NaN")]),v._v("表示计算出来的值不是数字")]),v._v(" "),t("p",[t("code",[v._v("isNaN(x); // 返回 true")]),v._v("判断一个值是不是数字")]),v._v(" "),t("h3",{attrs:{id:"算数对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算数对象"}},[v._v("#")]),v._v(" 算数对象")]),v._v(" "),t("p",[v._v("Math")]),v._v(" "),t("h3",{attrs:{id:"对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[v._v("#")]),v._v(" 对象")]),v._v(" "),t("p",[v._v("对象本质上是一个个kv对，所有的对象都是Object的实例，继承Object.prototype属性和方法")]),v._v(" "),t("p",[v._v("对对象的操作是引用的方式，赋值不会创建新的对象")]),v._v(" "),t("p",[v._v("使用new实例化对象，会产生两次")]),v._v(" "),t("ul",[t("li",[v._v("自动创建return")]),v._v(" "),t("li",[v._v("自动绑定对象内的this指向对象自己，否则this指向window")])]),v._v(" "),t("p",[v._v("基本类型不属于对象，但是对基本类型使用对象的操作时"),t("code",[v._v('str="hello";str.length;')]),v._v("会临时装箱和拆箱（转为对象，用完后再销毁），因此频繁使用会影响性能")]),v._v(" "),t("p",[v._v("能从对象中解构变量")]),v._v(" "),t("h3",{attrs:{id:"字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[v._v("#")]),v._v(" 字符串")]),v._v(" "),t("p",[v._v("属性：")]),v._v(" "),t("ul",[t("li",[v._v("constructor 返回对应的构造函数")]),v._v(" "),t("li",[v._v("length 返回字符串长度")]),v._v(" "),t("li",[v._v("prototype")])]),v._v(" "),t("p",[v._v("方法:")]),v._v(" "),t("p",[v._v("……")]),v._v(" "),t("p",[v._v("模板字符串，在字符串中嵌入表达式，字符串内支持换行，对于`需要加\\转义")]),v._v(" "),t("h3",{attrs:{id:"数据结构的转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构的转换"}},[v._v("#")]),v._v(" 数据结构的转换")]),v._v(" "),t("p",[v._v("转为字符串：")]),v._v(" "),t("ul",[t("li",[v._v("String(x)")]),v._v(" "),t("li",[v._v("x.toString();")])]),v._v(" "),t("p",[v._v("转为数字：")]),v._v(" "),t("ul",[t("li",[v._v('Number("2");')]),v._v(" "),t("li",[v._v("a.parseFloat();//解析为浮点数")]),v._v(" "),t("li",[v._v("a.parseInt();//返回整数")]),v._v(" "),t("li",[v._v("var  x=+y;//+会将y转为数字，如果y无法转为数字，那么值为NaN")])]),v._v(" "),t("h3",{attrs:{id:"逻辑语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑语法"}},[v._v("#")]),v._v(" 逻辑语法")]),v._v(" "),t("ul",[t("li",[v._v("=== 比较值和类型是否都相等")]),v._v(" "),t("li",[v._v("!== 值和类型都得相等")])]),v._v(" "),t("p",[v._v("if for switch 语法和cpp一样")]),v._v(" "),t("p",[v._v("遍历对象"),t("code",[v._v("for(x in preson){}")])]),v._v(" "),t("p",[v._v("标签+break配合可以实现在指定位置停止执行")]),v._v(" "),t("h3",{attrs:{id:"使用正则表达"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用正则表达"}},[v._v("#")]),v._v(" 使用正则表达")]),v._v(" "),t("p",[v._v("字符串调用的正则方法：")]),v._v(" "),t("ul",[t("li",[v._v("search()返回指定子串起始位置的下标")]),v._v(" "),t("li",[v._v("replace()替换和正则匹配的子串")])]),v._v(" "),t("p",[v._v("正则修饰符：")]),v._v(" "),t("ul",[t("li",[v._v("i:不区分大小写")]),v._v(" "),t("li",[v._v("g：找到一个后停止")]),v._v(" "),t("li",[v._v("m：多行匹配")])]),v._v(" "),t("p",[v._v("regexp对象，内置的方法有")]),v._v(" "),t("h3",{attrs:{id:"异常"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[v._v("#")]),v._v(" 异常")]),v._v(" "),t("h3",{attrs:{id:"严格模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#严格模式"}},[v._v("#")]),v._v(" 严格模式")]),v._v(" "),t("p",[t("code",[v._v("use strict;")]),v._v("在脚本头部/函数头部添加来声明严格模式")]),v._v(" "),t("ul",[t("li",[v._v("严格模式会禁用声明提升")]),v._v(" "),t("li",[v._v("不允许删除变量")]),v._v(" "),t("li",[v._v("不能重命名")]),v._v(" "),t("li",[v._v("禁止this关键字指向全局")]),v._v(" "),t("li",[v._v("……")])]),v._v(" "),t("h3",{attrs:{id:"this关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#this关键字"}},[v._v("#")]),v._v(" this关键字")]),v._v(" "),t("ul",[t("li",[v._v("单独使用this表示全局对象。")]),v._v(" "),t("li",[v._v("严格模式下函数内使用this是undefined，指向外部全局的this")]),v._v(" "),t("li",[v._v("事件中使用this，指向接收事件的HTML元素")]),v._v(" "),t("li",[v._v("对象内使用表示对象")]),v._v(" "),t("li",[v._v("显示函数绑定")])]),v._v(" "),t("h3",{attrs:{id:"const、let和var的作用域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#const、let和var的作用域"}},[v._v("#")]),v._v(" const、let和var的作用域")]),v._v(" "),t("p",[v._v("在其他部分var和let一样，全局变量为全局作用域，局部变量为局部作用域，除了一些区别：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("let、const不属于window对象")])]),v._v(" "),t("li",[t("p",[v._v("不同作用域下let、var、const不能相互重置声明")])])]),v._v(" "),t("p",[v._v("在不同作用域下，都可以重置声明自己，var重置影响外部，let不影响外部")]),v._v(" "),t("p",[v._v("在相同作用域下，let、const不能重置声明自己，var可以")]),v._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[v._v("let、const没有变量提升，不能先使用再声明")])]),v._v(" "),t("p",[v._v("const和let有同样的特性，同时，const定义时必须初始化，且定义后不可重新赋值")]),v._v(" "),t("p",[v._v("const对象可以修改，但不能重新赋值")]),v._v(" "),t("p",[v._v("函数内定义并使用函数表达式，其中是一个单独的作用域")]),v._v(" "),t("h3",{attrs:{id:"javascript-void-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#javascript-void-0"}},[v._v("#")]),v._v(" javascript:void(0)")]),v._v(" "),t("p",[t("code",[v._v('<a href="javascript:void(0)"不会发生任何事></a>')])]),v._v(" "),t("p",[v._v("void(表达式)表示返回的值为空，但是表达式里的值依然要执行，表达式必须要有个值，不能不填")]),v._v(" "),t("p",[v._v("JavaScript没有重载，后定义的函数会覆盖之前的函数")]),v._v(" "),t("p",[t("code",[v._v('<a href="#pos">点击跳转pos位置</a>')])]),v._v(" "),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[v._v("#")]),v._v(" 函数")]),v._v(" "),t("h3",{attrs:{id:"箭头函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[v._v("#")]),v._v(" 箭头函数")]),v._v(" "),t("h3",{attrs:{id:"函数参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数参数"}},[v._v("#")]),v._v(" 函数参数")]),v._v(" "),t("p",[v._v("函数参数为值传递，内部改变不影响外部的值")]),v._v(" "),t("p",[v._v("JavaScript对参数的值没有进行任何检查，可以有3个参数，使用时只传两个参数。")]),v._v(" "),t("p",[v._v("多传入参数并不影响函数运行,可以通过内置的"),t("code",[v._v("arguments")]),v._v("对象来访问")]),v._v(" "),t("h3",{attrs:{id:"用new创建对象会调用对象的构造函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用new创建对象会调用对象的构造函数"}},[v._v("#")]),v._v(" 用new创建对象会调用对象的构造函数")]),v._v(" "),t("h3",{attrs:{id:"函数的内置方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数的内置方法"}},[v._v("#")]),v._v(" 函数的内置方法")]),v._v(" "),t("p",[v._v("call、apply两个方法类似于cpp的static静态函数的用法")]),v._v(" "),t("p",[v._v("两者的区别在于call方法后面直接跟参数。apply方法后面跟数组")]),v._v(" "),t("p",[v._v("严格模式下，call方法和apply方法调用后，第一个参数为当前方法的this对象")]),v._v(" "),t("h3",{attrs:{id:"闭包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[v._v("#")]),v._v(" 闭包")]),v._v(" "),t("p",[v._v("当前函数内可以访问上一层的变量，因此可以创建有状态的函数")]),v._v(" "),t("h1",{attrs:{id:"特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[v._v("#")]),v._v(" 特性")]),v._v(" "),t("h2",{attrs:{id:"表单"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表单"}},[v._v("#")]),v._v(" 表单")]),v._v(" "),t("p",[v._v("验证表单字段是否存在")]),v._v(" "),t("p",[v._v("约束验证模型")]),v._v(" "),t("p",[v._v("input.validity.属性：")]),v._v(" "),t("ul",[t("li",[v._v("customError\t设置为 true, 如果设置了自定义的 validity 信息。")]),v._v(" "),t("li",[v._v("patternMismatch\t设置为 true, 如果元素的值不匹配它的模式属性。")]),v._v(" "),t("li",[v._v("rangeOverflow\t设置为 true, 如果元素的值大于设置的最大值。")]),v._v(" "),t("li",[v._v("rangeUnderflow\t设置为 true, 如果元素的值小于它的最小值。")]),v._v(" "),t("li",[v._v("stepMismatch\t设置为 true, 如果元素的值不是按照规定的 step 属性设置。")]),v._v(" "),t("li",[v._v("tooLong\t设置为 true, 如果元素的值超过了 maxLength 属性设置的长度。")]),v._v(" "),t("li",[v._v("typeMismatch\t设置为 true, 如果元素的值不是预期相匹配的类型。")]),v._v(" "),t("li",[v._v("valueMissing\t设置为 true，如果元素 (required 属性) 没有值。")]),v._v(" "),t("li",[v._v("valid\t设置为 true，如果元素的值是合法的。")])]),v._v(" "),t("p",[v._v("一个典型的例子")]),v._v(" "),t("h2",{attrs:{id:"json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[v._v("#")]),v._v(" JSON")]),v._v(" "),t("p",[v._v("JavaScript提供了方便的json内置操作")]),v._v(" "),t("ul",[t("li",[v._v('JSON.parse("字符串") 将json字符串转为js对象')]),v._v(" "),t("li",[v._v("JSON.stringify() 将js对象值转为字符串")])]),v._v(" "),t("h2",{attrs:{id:"异步编程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步编程"}},[v._v("#")]),v._v(" 异步编程")]),v._v(" "),t("h3",{attrs:{id:"settimeout函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#settimeout函数"}},[v._v("#")]),v._v(" setTimeout函数")]),v._v(" "),t("h3",{attrs:{id:"xmlhttprequest对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest对象"}},[v._v("#")]),v._v(" XMLHttpRequest对象")]),v._v(" "),t("p",[v._v("AJAX(Asynchronous Javascript And XML)是一类技术，XMLHttpRequest是其中的具体实现，将网页的内容拆分成多次请求，每次返回一部分内容显示，同时发起下次请求，该技术可以提升网页加载的速度")]),v._v(" "),t("h3",{attrs:{id:"fetch对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fetch对象"}},[v._v("#")]),v._v(" fetch对象")]),v._v(" "),t("p",[v._v("ES6中替代XMLHttpRequest对象，有和XMLHttpRequest对象一样的功能")]),v._v(" "),t("h3",{attrs:{id:"promise对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise对象"}},[v._v("#")]),v._v(" Promise对象")]),v._v(" "),t("p",[v._v("setTimeout是c风格的，同时没有异常处理，promise通过创建对象来管理异步生命周期，更符合面向对象的思想")]),v._v(" "),t("ul",[t("li",[v._v("单纯使用setimeout会有回调地域")]),v._v(" "),t("li",[v._v("增加了异常处理")]),v._v(" "),t("li",[v._v("对象思想统一管理对象")]),v._v(" "),t("li",[v._v("适用于同时有多个异步任务要执行时")])]),v._v(" "),t("p",[v._v("Promise对象的参数是一个具有两个参数的回调函数"),t("code",[v._v("function(resolve,reject)")])]),v._v(" "),t("ul",[t("li",[v._v("resolve 供回调函数执行成功时传递状态")]),v._v(" "),t("li",[v._v("reject 供回调函数执行失败时传递状态")])]),v._v(" "),t("p",[v._v("Promise对象有三个方法，三个方法的参数都是回调函数：")]),v._v(" "),t("ul",[t("li",[v._v("then :promise执行成功时回调")]),v._v(" "),t("li",[v._v("catch :执行失败时回调")]),v._v(" "),t("li",[v._v("finally :无论执行状态必定回调")])]),v._v(" "),t("p",[v._v("注意then、catch、finally的顺序是会影响结果的。catch表示捕获当前以前所有发出异常的行为，then表示只捕获最近的对象的状态。所以如果先catch后then、finally，then是判断catch执行的成功状态，而不是promise里的执行状态。所以then必定放到最前面。catch 可以放到finally后面，考虑finally执行出错的情况也由catch执行")]),v._v(" "),t("p",[v._v("promise对象的函数是同步执行的，但是then、catch、finally是异步执行的")]),v._v(" "),t("h3",{attrs:{id:"async-function对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#async-function对象"}},[v._v("#")]),v._v(" "),t("code",[v._v("async function")]),v._v("对象")]),v._v(" "),t("p",[v._v("和promise能实现一样的效果，但更可视化")]),v._v(" "),t("h2",{attrs:{id:"dom文档对象模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom文档对象模型"}},[v._v("#")]),v._v(" DOM文档对象模型")]),v._v(" "),t("p",[v._v("浏览器通过解析HTML文件生成对象模型树：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/%E5%89%8D%E7%AB%AF/image-4.png",alt:"alt text"}})]),v._v(" "),t("p",[v._v("js可以和对象模型交互实现：")]),v._v(" "),t("ul",[t("li",[v._v("改变html元素、属性、css样式")]),v._v(" "),t("li",[v._v("对事件反应")])]),v._v(" "),t("h3",{attrs:{id:"查找html元素"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查找html元素"}},[v._v("#")]),v._v(" 查找HTML元素")]),v._v(" "),t("ul",[t("li",[v._v("通过ID："),t("code",[v._v('document.getElementById("ID")')])]),v._v(" "),t("li",[v._v("通过标签名："),t("code",[v._v('document.getElementsByTagName("p")')])]),v._v(" "),t("li",[v._v("通过类名："),t("code",[v._v('document.getElementsByClassName("class")')])])]),v._v(" "),t("p",[v._v("返回的是 htmlcollection 类型的伪数组，可以通过下标访问，无法使用数组方法，只包含html元素对象")]),v._v(" "),t("p",[v._v("将其转为真数组"),t("code",[v._v('Array.prototype.slice.call(document.getElementsByTagName("div"));')])]),v._v(" "),t("ul",[t("li",[t("code",[v._v('document.querySelectorAll("p");')])])]),v._v(" "),t("p",[v._v("返回的是NodeList对象，只能通过下标访问。常用来遍历某个标签的所有对象")]),v._v(" "),t("p",[v._v("HTMLCollection仅包含元素节点，NodeList包含元素节点、文本节点、注释节点等")]),v._v(" "),t("h3",{attrs:{id:"输出-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出-2"}},[v._v("#")]),v._v(" 输出")]),v._v(" "),t("h3",{attrs:{id:"事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[v._v("#")]),v._v(" 事件")]),v._v(" "),t("p",[v._v("可以在标签中直接分配事件，"),t("button",{attrs:{onclick:"displayDate()"}},[v._v("点这里")])]),v._v(" "),t("p",[v._v('也可以用DOM来分配事件 document.getElementById("id").onclick=displaytDate;')]),v._v(" "),t("p",[v._v("鼠标事件，一次完整的点击为onmousedown->onmouseup->onclick：")]),v._v(" "),t("ul",[t("li",[v._v("onmouseout、onmouseleave: 鼠标移动到元素（前者冒泡，后者不冒泡）")]),v._v(" "),t("li",[v._v("onmouseover、onmouseout：鼠标移动离开元素（前者冒泡，后者不冒泡）")]),v._v(" "),t("li",[v._v("onmousedown：鼠标点下按钮")]),v._v(" "),t("li",[v._v("onmouseup：释放鼠标按钮")]),v._v(" "),t("li",[v._v("onclick：点击完成")]),v._v(" "),t("li",[v._v("oncontextmenu：鼠标右键点击时")]),v._v(" "),t("li",[v._v("ondblclick：鼠标左键双击")]),v._v(" "),t("li",[v._v("onmousemove：鼠标在目标对象上时触发，只要在对象上有移动会连续触发，可以实现追踪鼠标位置")])]),v._v(" "),t("p",[v._v("文本操作：")]),v._v(" "),t("ul",[t("li",[v._v("onfocus：输入框获取焦点时")]),v._v(" "),t("li",[v._v("onblur：输入框失去焦点")]),v._v(" "),t("li",[v._v("onchange：用户改变输入字段内容")]),v._v(" "),t("li",[v._v("oninput\t元素获取用户输入时触发")]),v._v(" "),t("li",[v._v("onreset\t表单重置时触发")]),v._v(" "),t("li",[v._v("onselect\t用户选取文本时触发 ("),t("code",[v._v("<input> 和 <textarea>")]),v._v(")")]),v._v(" "),t("li",[v._v("onsubmit\t表单提交时触发")])]),v._v(" "),t("p",[v._v("键盘：")]),v._v(" "),t("ul",[t("li",[v._v("onkeydown\t某个键盘按键被按下。")]),v._v(" "),t("li",[v._v("onkeypress\t某个键盘按键被按下并松开。")]),v._v(" "),t("li",[v._v("onkeyup\t某个键盘按键被松开。")])]),v._v(" "),t("p",[v._v("剪贴板：")]),v._v(" "),t("ul",[t("li",[v._v("oncopy\t该事件在用户拷贝元素内容时触发")]),v._v(" "),t("li",[v._v("oncut\t该事件在用户剪切元素内容时触发")]),v._v(" "),t("li",[v._v("onpaste\t该事件在用户粘贴元素内容时触发")])]),v._v(" "),t("p",[v._v("框架对象：")]),v._v(" "),t("ul",[t("li",[v._v("onpagehide\t该事件在用户离开当前网页跳转到另外一个页面时触发")]),v._v(" "),t("li",[v._v("onscroll\t当文档被滚动时发生的事件。")]),v._v(" "),t("li",[v._v("onload：用户进入网页")]),v._v(" "),t("li",[v._v("onunload：用户离开页面")])]),v._v(" "),t("p",[v._v("拖动对象：")]),v._v(" "),t("p",[v._v("多媒体对象：")]),v._v(" "),t("p",[v._v("打印对象：")]),v._v(" "),t("p",[v._v("动画对象：")]),v._v(" "),t("p",[v._v("监听事件：")]),v._v(" "),t("p",[t("code",[v._v('element.addEventListener("event", function, useCapture);')]),v._v("//event不要加on前缀，useCapture为可选")]),v._v(" "),t("p",[v._v("useCapture:")]),v._v(" "),t("ul",[t("li",[v._v("false,默认，冒泡传递，内部元素事件先触发，在触发外部元素")]),v._v(" "),t("li",[v._v("true，捕获传递，外部元素事件先触发，在触发内部元素事件")])]),v._v(" "),t("blockquote",[t("p",[v._v("该方法添加的事件不会覆盖已有的事件，可以多次添加事件")])]),v._v(" "),t("p",[t("code",[v._v('element.removeEventListener("mousemove", myFunction);')]),v._v("移除事件监听")]),v._v(" "),t("h2",{attrs:{id:"dom元素操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom元素操作"}},[v._v("#")]),v._v(" DOM元素操作")]),v._v(" "),t("ul",[t("li",[v._v("appendChild()用于追加元素")]),v._v(" "),t("li",[v._v("insertBefore()用于在元素之前追加")]),v._v(" "),t("li",[v._v("removeChild()用于移除元素。\n"),t("code",[v._v('document.getElementById("div1").removeChild(document.getElementById("p1"))')])]),v._v(" "),t("li",[v._v("replaceChild()替换元素")])]),v._v(" "),t("h2",{attrs:{id:"prototype原型对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prototype原型对象"}},[v._v("#")]),v._v(" prototype原型对象")]),v._v(" "),t("p",[v._v("对象的__proto__属性指向他的原型对象")]),v._v(" "),t("p",[v._v("对象的prototype属性存放从上一级的原型对象里继承来的属性和方法，但实例化一个对象时，会自动获得这个protetype对象并实时更新")]),v._v(" "),t("p",[v._v("当")]),v._v(" "),t("p",[v._v("在拥有构造函数的对象中,添加新的属性将不能被继承：")]),v._v(" "),t("p",[v._v("但是如果是通过prototype添加的新属性就可以被继承")]),v._v(" "),t("p",[v._v("从原理上来说，当访问一个对象的属性或方法时，如果没找到，通过prototype实现沿着原型链向上查找")]),v._v(" "),t("p",[v._v("使用"),t("code",[v._v("Object.create(原型对象)")]),v._v("方法可以指定创建对象的原型")]),v._v(" "),t("h2",{attrs:{id:"window方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#window方法"}},[v._v("#")]),v._v(" window方法")]),v._v(" "),t("p",[v._v("所有的全局对象和全局变量都是window对象的方法，通过window对象来访问全局变量可以得到一个变量是否存在，对其做删除操作")]),v._v(" "),t("p",[v._v("屏幕尺寸：")]),v._v(" "),t("ul",[t("li",[v._v("window.innerHeight - 浏览器窗口的内部高度(包括滚动条)")]),v._v(" "),t("li",[v._v("window.innerWidth - 浏览器窗口的内部宽度(包括滚动条)")]),v._v(" "),t("li",[v._v("window.open() - 打开新窗口")]),v._v(" "),t("li",[v._v("window.close() - 关闭当前窗口")]),v._v(" "),t("li",[v._v("window.moveTo() - 移动当前窗口")]),v._v(" "),t("li",[v._v("window.resizeTo() - 调整当前窗口的尺寸")]),v._v(" "),t("li",[v._v("screen.availWidth - 可用的屏幕宽度")]),v._v(" "),t("li",[v._v("screen.availHeight - 可用的屏幕高度")])]),v._v(" "),t("p",[v._v("服务器url：")]),v._v(" "),t("ul",[t("li",[v._v("location.hostname 返回 web 主机的域名")]),v._v(" "),t("li",[v._v("location.pathname 返回当前页面的路径和文件名")]),v._v(" "),t("li",[v._v("location.port 返回 web 主机的端口 （80 或 443）")]),v._v(" "),t("li",[v._v("location.protocol 返回所使用的 web 协议（http: 或 https:）")])]),v._v(" "),t("p",[v._v("跳转链接：")]),v._v(" "),t("ul",[t("li",[v._v("window.location.assign(url) ： 链接跳转到指定的url，可以点击后退返回上一个页面。")]),v._v(" "),t("li",[v._v("window.location.replace(url) ： 加载 URL 替换当前窗口页面，没有后退返回上一页的")]),v._v(" "),t("li",[v._v("history.goS(1/0/-1): 1表示前进一个，-1表示后退一个页面，0表示刷新")])]),v._v(" "),t("p",[v._v("弹窗：")]),v._v(" "),t("ul",[t("li",[v._v("alert(“”) ：警告（只有一个按钮）")]),v._v(" "),t("li",[v._v("confirm(“”):弹出确认信息（有确认、取消两个按钮）")]),v._v(" "),t("li",[v._v('prompt("提示信息"，"用户输入信息的默认值")：提示框')])]),v._v(" "),t("h2",{attrs:{id:"计时事件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#计时事件"}},[v._v("#")]),v._v(" 计时事件")]),v._v(" "),t("h2",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[v._v("#")]),v._v(" cookie")]),v._v(" "),t("p",[v._v("cookie是以kv对存储的，新加的cookie变量会追加到cookie中")]),v._v(" "),t("h1",{attrs:{id:"js库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js库"}},[v._v("#")]),v._v(" js库")]),v._v(" "),t("h2",{attrs:{id:"jquery"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jquery"}},[v._v("#")]),v._v(" jQuery")]),v._v(" "),t("p",[t("code",[v._v('<script src="https://cdn.staticfile.org/jquery/1.8.3/jquery.min.js">')])]),v._v(" "),t("p",[t("code",[v._v("$(DOM对象)")]),v._v("函数能返回一个jQuery对象，携带方法和属性")]),v._v(" "),t("h2",{attrs:{id:"prototype"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[v._v("#")]),v._v(" prototype")]),v._v(" "),t("p",[t("code",[v._v('<script src="https://cdn.staticfile.org/prototype/1.7.3/prototype.min.js">')])]),v._v(" "),t("h1",{attrs:{id:"es6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6"}},[v._v("#")]),v._v(" ES6")]),v._v(" "),t("p",[v._v("自动添加use strict;")]),v._v(" "),t("h2",{attrs:{id:"上面已提到的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#上面已提到的"}},[v._v("#")]),v._v(" 上面已提到的")]),v._v(" "),t("p",[v._v("let和const关键字、promise、async")]),v._v(" "),t("h2",{attrs:{id:"解构赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[v._v("#")]),v._v(" 解构赋值")]),v._v(" "),t("h2",{attrs:{id:"原始数据类型symbol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原始数据类型symbol"}},[v._v("#")]),v._v(" 原始数据类型symbol")]),v._v(" "),t("h2",{attrs:{id:"map对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#map对象"}},[v._v("#")]),v._v(" map对象")]),v._v(" "),t("p",[v._v("比起object，map：")]),v._v(" "),t("ul",[t("li",[v._v("map内的顺序同元素加入的顺序")]),v._v(" "),t("li",[v._v("map的key可以是任意值，object只能是string或symbol")]),v._v(" "),t("li",[v._v("map有size属性")])]),v._v(" "),t("h2",{attrs:{id:"set对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set对象"}},[v._v("#")]),v._v(" set对象")]),v._v(" "),t("p",[v._v("存放任意的单个值，且不能重复")]),v._v(" "),t("h2",{attrs:{id:"proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[v._v("#")]),v._v(" Proxy")]),v._v(" "),t("p",[v._v("一个proxy对象由target、handler两部分构成，target是被操作的数据，handler里是操作数据的方法。通过proxy对象对数据的操作将体现在target上")]),v._v(" "),t("h2",{attrs:{id:"reflect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reflect"}},[v._v("#")]),v._v(" Reflect")]),v._v(" "),t("p",[v._v("用Proxy设置了拦截操作，用Reflect能更优雅的获取目标对象的拦截行为")]),v._v(" "),t("p",[v._v("get方法："),t("code",[v._v("Reflect.get(target, name, receiver)")])]),v._v(" "),t("p",[v._v("返回target对象中的name属性，如果有receiver，将this指向receiver")]),v._v(" "),t("p",[v._v("set方法："),t("code",[v._v("Reflect.set(target, name, vaule, receiver)")])]),v._v(" "),t("p",[v._v("调用target中的name属性设置为vaule，并返回是否执行成功")]),v._v(" "),t("h2",{attrs:{id:"字符串、数值、对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串、数值、对象"}},[v._v("#")]),v._v(" 字符串、数值、对象")]),v._v(" "),t("p",[v._v("新增了对他们的操作")]),v._v(" "),t("p",[v._v("………………")]),v._v(" "),t("p",[v._v("简写方法名")]),v._v(" "),t("p",[v._v("用*标识构造函数")]),v._v(" "),t("p",[v._v("视图提供了以字节为单位的范围操作能力")]),v._v(" "),t("h2",{attrs:{id:"箭头函数-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数-2"}},[v._v("#")]),v._v(" 箭头函数")]),v._v(" "),t("p",[t("code",[v._v("参数=> 函数体")])]),v._v(" "),t("p",[v._v("箭头函数中的this不指向自己，而是定义箭头函数的上下文里的this对象")]),v._v(" "),t("p",[v._v("不能使用new命令")]),v._v(" "),t("p",[v._v("适用的场景为，在回调函数中需要保存当前上下文")]),v._v(" "),t("h2",{attrs:{id:"类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[v._v("#")]),v._v(" 类")]),v._v(" "),t("p",[v._v("同cpp一样")]),v._v(" "),t("p",[v._v("类没有类声明提升")]),v._v(" "),t("h3",{attrs:{id:"extends用于继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extends用于继承"}},[v._v("#")]),v._v(" extends用于继承")]),v._v(" "),t("p",[v._v("JavaScript没传统的类，class是基于原型的继承模型")]),v._v(" "),t("h3",{attrs:{id:"getter和setter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#getter和setter"}},[v._v("#")]),v._v(" getter和setter")]),v._v(" "),t("h3",{attrs:{id:"类的静态方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的静态方法"}},[v._v("#")]),v._v(" 类的静态方法")]),v._v(" "),t("h2",{attrs:{id:"装饰器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#装饰器"}},[v._v("#")]),v._v(" 装饰器")]),v._v(" "),t("p",[v._v("可以用于对方法、属性添加缓存，做性能分析、检测，做验证授权")]),v._v(" "),t("h3",{attrs:{id:"类装饰器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类装饰器"}},[v._v("#")]),v._v(" 类装饰器")]),v._v(" "),t("p",[v._v("@后的函数将作为类的装饰函数。编译时对代码动态扩展")]),v._v(" "),t("p",[v._v("从原理上来说，上诉代码在编译后会转变为")]),v._v(" "),t("p",[v._v("带参数的装饰器")]),v._v(" "),t("p",[v._v("一个实际的使用场景，用类修饰器实现日志记录实例化MyClass类的时机")]),v._v(" "),t("h3",{attrs:{id:"方法装饰器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#方法装饰器"}},[v._v("#")]),v._v(" 方法装饰器")]),v._v(" "),t("p",[v._v("可以用于对方法添加缓存，做性能分析、检测，做验证授权")]),v._v(" "),t("p",[v._v("用方法修饰器实现日志记录的实例")]),v._v(" "),t("h3",{attrs:{id:"属性修饰器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性修饰器"}},[v._v("#")]),v._v(" 属性修饰器")]),v._v(" "),t("p",[v._v("记录属性的使用")]),v._v(" "),t("h2",{attrs:{id:"es6模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es6模块"}},[v._v("#")]),v._v(" ES6模块")]),v._v(" "),t("p",[v._v("两种方式导出，多次执行import只会执行一次，通过import的导入为只读属性。")]),v._v(" "),t("p",[v._v("import语法是静态的，不能使用表达式")]),v._v(" "),t("p",[v._v("匿名导出：")]),v._v(" "),t("p",[v._v("导出模块必须是"),t("code",[v._v("export default")]),v._v("格式，且只能导出一个内容，导入时使用"),t("code",[v._v('import b from "./xxx.js";')]),v._v("，不加{}")]),v._v(" "),t("p",[v._v("命名导出：")]),v._v(" "),t("p",[v._v("导出模块内一个或多个内容，导出时用"),t("code",[v._v("export{}")]),v._v("，导入时用"),t("code",[v._v('import { myName as yourname, yourfn } from "./test.js";')]),v._v("，必须加{}")]),v._v(" "),t("h2",{attrs:{id:"generator函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#generator函数"}},[v._v("#")]),v._v(" generator函数")]),v._v(" "),t("p",[v._v("generator函数不会立马执行而是返回一个对象，通过next来往下执行，函数执行遇到yield停止")]),v._v(" "),t("p",[v._v("next()内传入的值将作为yield的返回值，yield后的值将作为next的返回值")]),v._v(" "),t("p",[t("code",[v._v('f.return("foo");')]),v._v("return函数能终止这个函数的执行，并返回return里携带的参数，没有就是undefined")]),v._v(" "),t("p",[t("code",[v._v("f.throw('a');")]),v._v("throw可以在函数外抛出异常，在函数内捕获，如果函数内没有捕获处理，函数外可以捕获")]),v._v(" "),t("p",[t("code",[v._v("yield* callee();")]),v._v("可以调用另一个generator函数")])])}),[],!1,null,null,null);t.default=a.exports}}]);